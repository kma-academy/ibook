name: ðŸ“€

on:
  release:
    types: [published]

jobs:
  base:
    name: Build docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
        name: Checkout lastest code
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Get release version
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Build base app
        uses: docker/build-push-action@v2
        with:
          context: .
          target: base
          tags: 'base'
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GH_TOKEN }}
      - name: Build gateway
        uses: docker/build-push-action@v2
        with:
          context: .
          target: build-service
          tags: |
            ghcr.io/notekunn/ibook-gateway:${{env.RELEASE_VERSION}}
          push: true
          build-args: |
            SERVICE_NAME=gateway
          cache-from: type=local,src=/tmp/.buildx-cache
      - name: Build genre feature
        uses: docker/build-push-action@v2
        with:
          context: .
          target: build-service
          tags: |
            ghcr.io/notekunn/ibook-feature-genre:${{env.RELEASE_VERSION}}
          push: true
          build-args: |
            SERVICE_NAME=feature-genre
          cache-from: type=local,src=/tmp/.buildx-cache
